# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  firstName: String
  lastName: String
  email: String
  address: String!
  age: Float
  gender: Float
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type SignedUser {
  data: User!
  signature: JSON!
  publicKey: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Contract {
  id: ID!
  name: String
  description: String
  address: String!
  chainId: Int!
  minaProofAddress: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GetContractListResponse {
  data: [Contract!]!
  totalCount: Int!
}

type OwnershipData {
  address: String!
  chainId: Int!
  balance: Int!
  createdAt: DateTime!
}

type SignedOwnershipData {
  data: OwnershipData!
  signature: JSON!
  publicKey: String!
}

type Exchange {
  id: ID!

  """Example field (placeholder)"""
  name: SupportedDex!
}

enum SupportedDex {
  Pangolin
  Uniswap
}

type GetExchangeListResponse {
  data: [Exchange!]!
  totalCount: Int!
}

type TradingData {
  address: String!
  dex: String!
  swapCounts: Int!
  amountUsd: Int!
  createdAt: DateTime!
}

type SignedTradingData {
  data: TradingData!
  signature: JSON!
  publicKey: String!
}

type Query {
  userProfile: SignedUser!
  contracts(search: String, withDeleted: Boolean): GetContractListResponse!
  contract(id: ID!, withDeleted: Boolean): Contract
  getOwnershipSignedData(address: String!, ercType: String!): SignedOwnershipData!
  exchanges(search: String, withDeleted: Boolean): GetExchangeListResponse!
  exchange(id: ID!, withDeleted: Boolean): Exchange
  getTradingSignedData(dex: String!): SignedTradingData!
}

type Mutation {
  removeContract(id: ID!): Boolean!
  softRemoveContract(id: ID!): Boolean!
  restoreContract(id: ID!): Contract!
  removeExchange(id: ID!): Boolean!
  softRemoveExchange(id: ID!): Boolean!
  restoreExchange(id: ID!): Exchange!
}